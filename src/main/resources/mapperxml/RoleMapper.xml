<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.robin.usedbookmarketbackend.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.robin.usedbookmarketbackend.model.Role">
    <!--@mbg.generated-->
    <!--@Table role-->
    <id column="roleID" jdbcType="INTEGER" property="roleid" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="auth_time" jdbcType="TIMESTAMP" property="authTime" />
    <result column="authID" jdbcType="INTEGER" property="authid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    roleID, roleName, create_time, auth_time, authID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from role
    where roleID = #{roleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from role
    where roleID = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="roleID" keyProperty="roleid" parameterType="com.robin.usedbookmarketbackend.model.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into role (roleName, create_time, auth_time, 
      authID)
    values (#{rolename,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{authTime,jdbcType=TIMESTAMP}, 
      #{authid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="roleID" keyProperty="roleid" parameterType="com.robin.usedbookmarketbackend.model.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rolename != null">
        roleName,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="authTime != null">
        auth_time,
      </if>
      <if test="authid != null">
        authID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authTime != null">
        #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authid != null">
        #{authid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.robin.usedbookmarketbackend.model.Role">
    <!--@mbg.generated-->
    update role
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authTime != null">
        auth_time = #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authid != null">
        authID = #{authid,jdbcType=INTEGER},
      </if>
    </set>
    where roleID = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.robin.usedbookmarketbackend.model.Role">
    <!--@mbg.generated-->
    update role
    set roleName = #{rolename,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      auth_time = #{authTime,jdbcType=TIMESTAMP},
      authID = #{authid,jdbcType=INTEGER}
    where roleID = #{roleid,jdbcType=INTEGER}
  </update>

  <select id="getRoleNameByUserID" resultType="String">
    SELECT role.roleName
    FROM `role`
    INNER JOIN `user-role`
    ON `role`.roleID=`user-role`.roleID
    INNER JOIN `user`
    ON `user-role`.userID=`user`.userID
    WHERE `user`.userID=#{userID}
  </select>
</mapper>